private string LeseSignature() 
{ 
    var appDataDir = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Microsoft\\Signatures"; // Verzeichnis, wo die Signaturern abgelegt sind
    var signature = string.Empty;                                                // Gefundene Sinatur
    DirectoryInfo diInfo = new DirectoryInfo(appDataDir);                        // Alle vorhandenen Signaturen ermitteln 
    if (!diInfo.Exists) return signature;                                        // Falls keine Verzeichnisinfo vorhanden sind, kann abgebrochen werden

    FileInfo[] fiSignature = diInfo.GetFiles("*.htm"); 

    if (fiSignature.Length <= 0) return signature;                              // Falls keine Signaturen vorhanden sind, kann abgebrochen werden
    var sr = new StreamReader(fiSignature[0].FullName, Encoding.Default);       // Es wird die erste vorhandene Signatur genommen
    signature = sr.ReadToEnd();                                                 // Signatur laden
    
    // Überprüfen, ob es sich um eine leere Signatur handelt
    if (!string.IsNullOrEmpty(signature)) 
    {
        // Signatur enthält Text, Signatur zusammenstellen         
        var fileName = fiSignature[0].Name.Replace(fiSignature[0].Extension, string.Empty); 
        signature = signature.Replace(fileName + "_files/", appDataDir + "/" + fileName + "_files/"); 
    }
   
    return signature; 
} 

